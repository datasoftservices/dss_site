<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<tx:annotation-driven></tx:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/javascript/" />

	<!-- Configure the multipart resolver -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="10000000"/>
    </beans:bean>
    
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="mail.datasoftservices.be"/>
        <beans:property name="port" value="25"/>
        <beans:property name="username" value="sollicitatie@datasoftservices.be"/>
        <beans:property name="password" value="Yyyvrc6T"/>
        <beans:property name="javaMailProperties">
            <beans:props>
                <!-- Use SMTP transport protocol -->
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <!-- Use SMTP-AUTH to authenticate to SMTP server -->
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <!-- Use TLS to encrypt communication with SMTP server -->
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="com.dss.exceptions.UserException">
					fout
		        </beans:prop>
				<beans:prop key="org.apache.commons.fileupload.FileUploadBase.SizeLimitExceededException">
					fout
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.dss.controllers" />
	<context:component-scan base-package="com.dss.blogpost" />
	<context:component-scan base-package="com.dss.security" />
	<context:component-scan base-package="com.dss.newspost" />
	<context:component-scan base-package="com.dss.jobs" />
	<context:component-scan base-package="com.dss.common" />
	<context:component-scan base-package="com.dss.profiles" />


</beans:beans>
