<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/users" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/blog/manage" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLOYEE')" />
		<intercept-url pattern="/news/manage" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLOYEE')" />
		<intercept-url pattern="/jobs/manage" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/account" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLOYEE','ROLE_GUEST')" />
		<intercept-url pattern="/resources/docs" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLOYEE','ROLE_GUEST')" />
		
		<form-login login-page="/login" default-target-url="/redirect"
			authentication-failure-url="/login?error=true"/>
		<logout logout-success-url="/redirect" />
		<session-management invalid-session-url="/redirect" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha-256">
			<!-- <salt-source user-property="userId"/> -->
        	</password-encoder>
			<jdbc-user-service data-source-ref="dataSource"
				
				users-by-username-query="
					select username,password, enabled 
					from USERS where USERNAME=?" 
				
				authorities-by-username-query="
					select u.username, ur.authority from USERS u, USER_ROLES ur 
					where u.user_id = ur.user_id and u.username =?  " 
					
			/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>